// Package docs GENERATED BY THE COMMAND ABOVE; DO NOT EDIT
// This file was generated by swaggo/swag
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {
            "name": "Schedrestd Support",
            "url": "http://teraproc.com/",
            "email": "williamlu9@gmail.com"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/file/download/{file_name}": {
            "get": {
                "description": "Example upload request:\ncurl -X GET -H \"Authorization: Bearer $TOKEN\" \"http://localhost:8088/sa/v1/file/download/testfile\" \u003e ./testfile",
                "produces": [
                    "application/octet-stream"
                ],
                "tags": [
                    "file"
                ],
                "summary": "Download a file from user home directory",
                "parameters": [
                    {
                        "type": "string",
                        "default": "Bearer \u003cAdd token here\u003e",
                        "description": "Token with Bearer started",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "file_name",
                        "name": "file_name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/file.FileResp"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized user",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "500": {
                        "description": "Internal error",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        },
        "/file/upload": {
            "post": {
                "description": "Example upload request:\ncurl -H \"Authorization: Bearer $TOKEN\" -H \"Content-Type: multipart/form-data\" -F \"file=@/shared/testfile\" \"http://localhost:8088/sa/v1/file/upload\"",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "file"
                ],
                "summary": "Upload a file to user home directory",
                "parameters": [
                    {
                        "type": "string",
                        "default": "Bearer \u003cAdd token here\u003e",
                        "description": "Token with Bearer started",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "upload file",
                        "name": "file",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/file.FileResp"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized user",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "500": {
                        "description": "Internal error",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        },
        "/cmd/run": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "cmd"
                ],
                "summary": "Run a command",
                "parameters": [
                    {
                        "type": "string",
                        "default": "Bearer \u003cAdd token here\u003e",
                        "description": "Token with Bearer started",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Run a command",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/cmd.CmdRun"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/cmd.CmdRunResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized user",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "403": {
                        "description": "Permission denied",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        },
        "/token/renew": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "token"
                ],
                "summary": "Renew token",
                "parameters": [
                    {
                        "type": "string",
                        "default": "Bearer \u003cAdd token here\u003e",
                        "description": "Token with Bearer started",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/auth.TokenResp"
                        }
                    },
                    "400": {
                        "description": "Invalid token",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        },
        "/login": {
            "post": {
                "description": "Logs user into the system",
                "tags": [
                    "auth"
                ],
                "parameters": [
                    {
                        "description": "Authenticate request",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/auth.AuthReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/auth.TokenResp"
                        }
                    },
                    "400": {
                        "description": "Invalid username/password supplied",
                        "schema": {
                            "$ref": "#/definitions/response.Response"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "auth.AuthReq": {
            "type": "object",
            "required": [
                "password",
                "username"
            ],
            "properties": {
                "password": {
                    "description": "Password",
                    "type": "string"
                },
                "username": {
                    "description": "User name",
                    "type": "string"
                },
		"duration": {
		    "description": "Token valid duration in minute",
		    "type:": "integer"
		}
            }
        },
        "auth.Token": {
            "type": "object",
            "properties": {
                "token": {
                    "description": "User token used to be authenticated",
                    "type": "string"
                },
                "userName": {
                    "description": "User name",
                    "type": "string"
                }
            }
        },
        "auth.TokenResp": {
            "type": "object",
            "properties": {
                "token": {
                    "$ref": "#/definitions/auth.Token"
                }
            }
        },
        "cmd.CmdRun": {
            "type": "object",
            "required": [
                "command"
            ],
            "properties": {
                "command": {
                    "description": "Command to run",
                    "type": "string"
                },
                "cwd": {
                    "description": "Specifies the current working directory for command execution",
                    "type": "string"
                },
                "envs": {
                    "description": "List of environment variables",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "cmd.CmdRunResponse": {
            "type": "object",
            "properties": {
                "output": {
                    "type": "string"
                },
		"error": {
		    "type": "string"
		}
            }
        },
        "file.FileResp": {
            "type": "object",
            "properties": {
                "file": {
                    "$ref": "#/definitions/file.FileResponse"
                }
            }
        },
        "file.FileResponse": {
            "type": "object",
            "properties": {
                "path": {
                    "type": "string"
                }
            }
        },
        "response.Response": {
            "type": "object",
            "properties": {
                "data": {},
                "msg": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "v1",
	Host:             "",
	BasePath:         "/sa/v1",
	Schemes:          []string{},
	Title:            "Schedrestd Rest API",
	Description:      "REST API to access Schedrestd",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
